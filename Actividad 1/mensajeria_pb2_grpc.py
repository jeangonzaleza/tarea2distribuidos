# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mensajeria_pb2 as mensajeria__pb2


class SendStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.unary_unary(
        '/Send/Send',
        request_serializer=mensajeria__pb2.Mensaje.SerializeToString,
        response_deserializer=mensajeria__pb2.Empty.FromString,
        )


class SendServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Send(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.unary_unary_rpc_method_handler(
          servicer.Send,
          request_deserializer=mensajeria__pb2.Mensaje.FromString,
          response_serializer=mensajeria__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Send', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ReceiveStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Receive = channel.unary_unary(
        '/Receive/Receive',
        request_serializer=mensajeria__pb2.Empty.SerializeToString,
        response_deserializer=mensajeria__pb2.Mensaje.FromString,
        )


class ReceiveServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Receive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReceiveServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Receive': grpc.unary_unary_rpc_method_handler(
          servicer.Receive,
          request_deserializer=mensajeria__pb2.Empty.FromString,
          response_serializer=mensajeria__pb2.Mensaje.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Receive', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
